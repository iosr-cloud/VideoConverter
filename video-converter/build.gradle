buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'agh.iosr'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	flatDir {
		dirs 'lib'
	}
}

ext {
	springCloudVersion = 'Edgware.RELEASE'
}

dependencies {
	compile name: 'jave-1.0.2'
	compile('com.amazonaws:aws-java-sdk:1.11.245')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.7.3'
	testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.3'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1201-jdbc41'
    compile group: 'com.amazonaws', name: 'amazon-sqs-java-messaging-lib', version: '1.0.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	push = project.hasProperty('push')
	dockerfile = file('src/main/docker/Dockerfile')
	tag = jar.baseName
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
buildDocker.dependsOn(build)